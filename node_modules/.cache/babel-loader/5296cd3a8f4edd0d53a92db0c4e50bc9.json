{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\IK-tech\\\\React-course\\\\textutils\\\\src\\\\components\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  _s();\n\n  const [mode, setMode] = useState({\n    color: 'white',\n    backgroundColor: 'black'\n  });\n  const [btnText, setBtnText] = useState(\"Enable Light Mode\");\n\n  const changeMode = () => {\n    if (mode.backgroundColor === \"black\") {\n      setMode({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      setBtnText(\"Enable Dark Mode\");\n    } else {\n      setMode({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"1px solid white\"\n      });\n      setBtnText(\"Enable White Mode\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-4\",\n      style: mode,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion\",\n        id: \"accordionExample\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            id: \"headingOne\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button\",\n              style: mode,\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseOne\",\n              \"aria-expanded\": \"true\",\n              \"aria-controls\": \"collapseOne\",\n              children: \"Analyze your text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseOne\",\n            className: \"accordion-collapse collapse show\",\n            \"aria-labelledby\": \"headingOne\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: mode,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Textutiles give you a way to analyze your text queckly and efficiantly.Be it word count,characters count. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            id: \"headingTwo\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button collapsed\",\n              style: mode,\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseTwo\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseTwo\",\n              children: \"Free To Use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseTwo\",\n            className: \"accordion-collapse collapse\",\n            \"aria-labelledby\": \"headingTwo\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: mode,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 413\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            id: \"headingThree\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button collapsed\",\n              style: mode,\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseThree\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseThree\",\n              children: \"Browser Compatible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseThree\",\n            className: \"accordion-collapse collapse\",\n            \"aria-labelledby\": \"headingThree\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              style: mode,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the third item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 449\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: changeMode,\n          className: \"btn btn-primary my-4\",\n          children: btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(About, \"1/cSundKcxBhhgwjD5ZHIVfV1Z0=\");\n\n_c = About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/IK-tech/React-course/textutils/src/components/About.js"],"names":["React","useState","About","mode","setMode","color","backgroundColor","btnText","setBtnText","changeMode","border"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n    \r\n    const [mode,setMode]=useState({\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    })\r\n    const[btnText,setBtnText]=useState(\"Enable Light Mode\");\r\n\r\n    const changeMode=()=>{\r\n        if (mode.backgroundColor===\"black\") {\r\n            setMode({\r\n                color:\"black\",\r\n                backgroundColor:\"white\"\r\n            })\r\n            setBtnText(\"Enable Dark Mode\");    \r\n        }\r\n        else{\r\n            setMode({\r\n                color:\"white\",\r\n                backgroundColor:\"black\",\r\n                border:\"1px solid white\"                \r\n            })\r\n            setBtnText(\"Enable White Mode\"); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='container my-4' style={mode}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={mode}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Analyze your text\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mode}>\r\n                            <strong>Textutiles give you a way to analyze your text queckly and efficiantly.Be it word count,characters count. </strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mode} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Free To Use\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mode}>\r\n                            <strong>Text</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mode} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Browser Compatible\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mode}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='container'>\r\n                <button type='button' onClick= {changeMode} className='btn btn-primary my-4'>{btnText}</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}